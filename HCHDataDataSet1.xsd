<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HCHDataDataSet1" targetNamespace="http://tempuri.org/HCHDataDataSet1.xsd" xmlns:mstns="http://tempuri.org/HCHDataDataSet1.xsd" xmlns="http://tempuri.org/HCHDataDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="HCHDataConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HCHDataConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BossAdmin.My.MySettings.GlobalReference.Default.HCHDataConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlanElevationsTableAdapter" GeneratorDataComponentClassName="PlanElevationsTableAdapter" Name="PlanElevations" UserDataComponentName="PlanElevationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HCHDataConnectionString (MySettings)" DbObjectName="HCHData.dbo.PlanElevations" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlanElevations] WHERE (([Elevation] = @Original_Elevation) AND ((@IsNull_ElevationDescription = 1 AND [ElevationDescription] IS NULL) OR ([ElevationDescription] = @Original_ElevationDescription)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Elevation" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Elevation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ElevationDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ElevationDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlanElevations] ([Elevation], [ElevationDescription]) VALUES (@Elevation, @ElevationDescription);
SELECT Elevation, ElevationDescription FROM PlanElevations WHERE (Elevation = @Elevation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Elevation" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Elevation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ElevationDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Elevation, ElevationDescription FROM dbo.PlanElevations</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlanElevations] SET [Elevation] = @Elevation, [ElevationDescription] = @ElevationDescription WHERE (([Elevation] = @Original_Elevation) AND ((@IsNull_ElevationDescription = 1 AND [ElevationDescription] IS NULL) OR ([ElevationDescription] = @Original_ElevationDescription)));
SELECT Elevation, ElevationDescription FROM PlanElevations WHERE (Elevation = @Elevation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Elevation" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Elevation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ElevationDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Elevation" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Elevation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ElevationDescription" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ElevationDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ElevationDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Elevation" DataSetColumn="Elevation" />
              <Mapping SourceColumn="ElevationDescription" DataSetColumn="ElevationDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HCHDataDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HCHDataDataSet1" msprop:Generator_UserDSName="HCHDataDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PlanElevations" msprop:Generator_TableClassName="PlanElevationsDataTable" msprop:Generator_TableVarName="tablePlanElevations" msprop:Generator_TablePropName="PlanElevations" msprop:Generator_RowDeletingName="PlanElevationsRowDeleting" msprop:Generator_RowChangingName="PlanElevationsRowChanging" msprop:Generator_RowEvHandlerName="PlanElevationsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlanElevationsRowDeleted" msprop:Generator_UserTableName="PlanElevations" msprop:Generator_RowChangedName="PlanElevationsRowChanged" msprop:Generator_RowEvArgName="PlanElevationsRowChangeEvent" msprop:Generator_RowClassName="PlanElevationsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Elevation" msprop:Generator_ColumnVarNameInTable="columnElevation" msprop:Generator_ColumnPropNameInRow="Elevation" msprop:Generator_ColumnPropNameInTable="ElevationColumn" msprop:Generator_UserColumnName="Elevation">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ElevationDescription" msprop:Generator_ColumnVarNameInTable="columnElevationDescription" msprop:Generator_ColumnPropNameInRow="ElevationDescription" msprop:Generator_ColumnPropNameInTable="ElevationDescriptionColumn" msprop:Generator_UserColumnName="ElevationDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlanElevations" />
      <xs:field xpath="mstns:Elevation" />
    </xs:unique>
  </xs:element>
</xs:schema>