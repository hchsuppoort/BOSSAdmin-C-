// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:4.0.30319.42000
// 
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Microsoft.VisualBasic.CompilerServices;

namespace BossAdmin
{



    /// <summary>
/// Represents a strongly typed in-memory cache of data.
/// </summary>
    [Serializable()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProvider("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRoot("HCHDataQAJobDetails")]
    [System.ComponentModel.Design.HelpKeyword("vs.data.DataSet")]
    public partial class HCHDataQAJobDetails : DataSet
    {

        private spGetJobDetailsDataTable tablespGetJobDetails;

        private SchemaSerializationMode _schemaSerializationMode = SchemaSerializationMode.IncludeSchema;

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public HCHDataQAJobDetails() : base()
        {
            BeginInit();
            InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = SchemaChanged;
            base.Tables.CollectionChanged+=schemaChangedHandler;
            base.Relations.CollectionChanged+=schemaChangedHandler;
            EndInit();
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected HCHDataQAJobDetails(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context, false)
        {
            if (IsBinarySerialized(info, context)==true)
            {
                InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = SchemaChanged;
                Tables.CollectionChanged+=schemaChangedHandler1;
                Relations.CollectionChanged+=schemaChangedHandler1;
                return;
            }
            string strSchema = Conversions.ToString(info.GetValue("XmlSchema", typeof(string)));
            if (DetermineSchemaSerializationMode(info, context)==SchemaSerializationMode.IncludeSchema)
            {
                var ds = new DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if (ds.Tables["spGetJobDetails"] is not null)
                {
                    base.Tables.Add(new spGetJobDetailsDataTable(ds.Tables["spGetJobDetails"]));
                }
                DataSetName=ds.DataSetName;
                Prefix=ds.Prefix;
                Namespace=ds.Namespace;
                Locale=ds.Locale;
                CaseSensitive=ds.CaseSensitive;
                EnforceConstraints=ds.EnforceConstraints;
                Merge(ds, false, MissingSchemaAction.Add);
                InitVars();
            }
            else
            {
                ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = SchemaChanged;
            base.Tables.CollectionChanged+=schemaChangedHandler;
            Relations.CollectionChanged+=schemaChangedHandler;
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spGetJobDetailsDataTable spGetJobDetails
        {
            get
            {
                return tablespGetJobDetails;
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return _schemaSerializationMode;
            }
            set
            {
                _schemaSerializationMode=value;
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            BeginInit();
            InitClass();
            EndInit();
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override DataSet Clone()
        {
            HCHDataQAJobDetails cln = (HCHDataQAJobDetails)base.Clone();
            cln.InitVars();
            cln.SchemaSerializationMode=SchemaSerializationMode;
            return cln;
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader)
        {
            if (DetermineSchemaSerializationMode(reader)==SchemaSerializationMode.IncludeSchema)
            {
                Reset();
                var ds = new DataSet();
                ds.ReadXml(reader);
                if (ds.Tables["spGetJobDetails"] is not null)
                {
                    base.Tables.Add(new spGetJobDetailsDataTable(ds.Tables["spGetJobDetails"]));
                }
                DataSetName=ds.DataSetName;
                Prefix=ds.Prefix;
                Namespace=ds.Namespace;
                Locale=ds.Locale;
                CaseSensitive=ds.CaseSensitive;
                EnforceConstraints=ds.EnforceConstraints;
                Merge(ds, false, MissingSchemaAction.Add);
                InitVars();
            }
            else
            {
                ReadXml(reader);
                InitVars();
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            var stream = new System.IO.MemoryStream();
            WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position=0L;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars()
        {
            InitVars(true);
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable)
        {
            tablespGetJobDetails=(spGetJobDetailsDataTable)base.Tables["spGetJobDetails"];
            if (initTable==true)
            {
                if (tablespGetJobDetails is not null)
                {
                    tablespGetJobDetails.InitVars();
                }
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass()
        {
            DataSetName="HCHDataQAJobDetails";
            Prefix="";
            Namespace="http://tempuri.org/HCHDataQAJobDetails1.xsd";
            EnforceConstraints=true;
            SchemaSerializationMode=SchemaSerializationMode.IncludeSchema;
            tablespGetJobDetails=new spGetJobDetailsDataTable();
            base.Tables.Add(tablespGetJobDetails);
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializespGetJobDetails()
        {
            return false;
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e)
        {
            if (e.Action==System.ComponentModel.CollectionChangeAction.Remove)
            {
                InitVars();
            }
        }

        [DebuggerNonUserCode()]
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs)
        {
            var ds = new HCHDataQAJobDetails();
            var type = new System.Xml.Schema.XmlSchemaComplexType();
            var sequence = new System.Xml.Schema.XmlSchemaSequence();
            var any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace=ds.Namespace;
            sequence.Items.Add(any);
            type.Particle=sequence;
            var dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                var s1 = new System.IO.MemoryStream();
                var s2 = new System.IO.MemoryStream();
                try
                {
                    System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    var schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
                    while (schemas.MoveNext())
                    {
                        schema=(System.Xml.Schema.XmlSchema)schemas.Current;
                        s2.SetLength(0L);
                        schema.Write(s2);
                        if (s1.Length==s2.Length)
                        {
                            s1.Position=0L;
                            s2.Position=0L;

                            while (s1.Position!=s1.Length&&s1.ReadByte()==s2.ReadByte())
                            {


                            }
                            if (s1.Position==s1.Length)
                            {
                                return type;
                            }
                        }

                    }
                }
                finally
                {
                    if (s1 is not null)
                    {
                        s1.Close();
                    }
                    if (s2 is not null)
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void spGetJobDetailsRowChangeEventHandler(object sender, spGetJobDetailsRowChangeEvent e);

        /// <summary>
    /// Represents the strongly named DataTable class.
    /// </summary>
        [Serializable()]
        [System.Xml.Serialization.XmlSchemaProvider("GetTypedTableSchema")]
        public partial class spGetJobDetailsDataTable : TypedTableBase<spGetJobDetailsRow>
        {

            private DataColumn columnid;

            private DataColumn columnJobID;

            private DataColumn columnResourceID;

            private DataColumn columnResourceName;

            private DataColumn columnActivityCode;

            private DataColumn columnResUsage;

            private DataColumn columnUM;

            private DataColumn columnBudgetQty;

            private DataColumn columnBudgetCostID;

            private DataColumn columnBudgetCost;

            private DataColumn columnExtdCost;

            private DataColumn columnVendorID;

            private DataColumn columnPONumber;

            private DataColumn columnPurchQty;

            private DataColumn columnPurchCostID;

            private DataColumn columnPurchCost;

            private DataColumn columnCOId;

            private DataColumn columnReviewLevel;

            private DataColumn columnReviewedDate;

            private DataColumn columnReviewedBy;

            private DataColumn columnApproved;

            private DataColumn columnCancelledDate;

            private DataColumn columnCreatedDate;

            private DataColumn columnCreatedBy;

            private DataColumn columnUpdatedDate;

            private DataColumn columnUpdatedBy;

            private DataColumn columnBudgetExtdCost;

            private DataColumn columnBudgetTax;

            private DataColumn columnPurchExtdCost;

            private DataColumn columnPurchTax;

            private DataColumn columnActivity;

            private DataColumn columnSource;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsDataTable() : base()
            {
                TableName="spGetJobDetails";
                BeginInit();
                InitClass();
                EndInit();
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spGetJobDetailsDataTable(DataTable table) : base()
            {
                TableName=table.TableName;
                if (table.CaseSensitive!=table.DataSet.CaseSensitive)
                {
                    CaseSensitive=table.CaseSensitive;
                }
                if ((table.Locale.ToString()??"")!=(table.DataSet.Locale.ToString()??""))
                {
                    Locale=table.Locale;
                }
                if ((table.Namespace??"")!=(table.DataSet.Namespace??""))
                {
                    Namespace=table.Namespace;
                }
                Prefix=table.Prefix;
                MinimumCapacity=table.MinimumCapacity;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected spGetJobDetailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(info, context)
            {
                InitVars();
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return columnid;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn JobIDColumn
            {
                get
                {
                    return columnJobID;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ResourceIDColumn
            {
                get
                {
                    return columnResourceID;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ResourceNameColumn
            {
                get
                {
                    return columnResourceName;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ActivityCodeColumn
            {
                get
                {
                    return columnActivityCode;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ResUsageColumn
            {
                get
                {
                    return columnResUsage;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn UMColumn
            {
                get
                {
                    return columnUM;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn BudgetQtyColumn
            {
                get
                {
                    return columnBudgetQty;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn BudgetCostIDColumn
            {
                get
                {
                    return columnBudgetCostID;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn BudgetCostColumn
            {
                get
                {
                    return columnBudgetCost;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ExtdCostColumn
            {
                get
                {
                    return columnExtdCost;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn VendorIDColumn
            {
                get
                {
                    return columnVendorID;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PONumberColumn
            {
                get
                {
                    return columnPONumber;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PurchQtyColumn
            {
                get
                {
                    return columnPurchQty;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PurchCostIDColumn
            {
                get
                {
                    return columnPurchCostID;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PurchCostColumn
            {
                get
                {
                    return columnPurchCost;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn COIdColumn
            {
                get
                {
                    return columnCOId;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ReviewLevelColumn
            {
                get
                {
                    return columnReviewLevel;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ReviewedDateColumn
            {
                get
                {
                    return columnReviewedDate;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ReviewedByColumn
            {
                get
                {
                    return columnReviewedBy;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ApprovedColumn
            {
                get
                {
                    return columnApproved;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn CancelledDateColumn
            {
                get
                {
                    return columnCancelledDate;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn CreatedDateColumn
            {
                get
                {
                    return columnCreatedDate;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn CreatedByColumn
            {
                get
                {
                    return columnCreatedBy;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn UpdatedDateColumn
            {
                get
                {
                    return columnUpdatedDate;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn UpdatedByColumn
            {
                get
                {
                    return columnUpdatedBy;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn BudgetExtdCostColumn
            {
                get
                {
                    return columnBudgetExtdCost;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn BudgetTaxColumn
            {
                get
                {
                    return columnBudgetTax;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PurchExtdCostColumn
            {
                get
                {
                    return columnPurchExtdCost;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn PurchTaxColumn
            {
                get
                {
                    return columnPurchTax;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn ActivityColumn
            {
                get
                {
                    return columnActivity;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataColumn SourceColumn
            {
                get
                {
                    return columnSource;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return Rows.Count;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRow this[int index]
            {
                get
                {
                    return (spGetJobDetailsRow)Rows[index];
                }
            }

            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spGetJobDetailsRowChangeEventHandler spGetJobDetailsRowChanging;

            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spGetJobDetailsRowChangeEventHandler spGetJobDetailsRowChanged;

            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spGetJobDetailsRowChangeEventHandler spGetJobDetailsRowDeleting;

            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spGetJobDetailsRowChangeEventHandler spGetJobDetailsRowDeleted;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddspGetJobDetailsRow(spGetJobDetailsRow row)
            {
                Rows.Add(row);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRow AddspGetJobDetailsRow(string JobID, string ResourceID, string ResourceName, int ActivityCode, string ResUsage, string UM, decimal BudgetQty, int BudgetCostID, decimal BudgetCost, decimal ExtdCost, int VendorID, int PONumber, decimal PurchQty, int PurchCostID, decimal PurchCost, int COId, int ReviewLevel, DateTime ReviewedDate, string ReviewedBy, int Approved, DateTime CancelledDate, DateTime CreatedDate, string CreatedBy, DateTime UpdatedDate, string UpdatedBy, decimal BudgetExtdCost, decimal BudgetTax, decimal PurchExtdCost, decimal PurchTax, string Activity, string Source)






























            {
                spGetJobDetailsRow rowspGetJobDetailsRow = (spGetJobDetailsRow)NewRow();
                object[] columnValuesArray = new object[] { null, JobID, ResourceID, ResourceName, ActivityCode, ResUsage, UM, BudgetQty, BudgetCostID, BudgetCost, ExtdCost, VendorID, PONumber, PurchQty, PurchCostID, PurchCost, COId, ReviewLevel, ReviewedDate, ReviewedBy, Approved, CancelledDate, CreatedDate, CreatedBy, UpdatedDate, UpdatedBy, BudgetExtdCost, BudgetTax, PurchExtdCost, PurchTax, Activity, Source };
                rowspGetJobDetailsRow.ItemArray=columnValuesArray;
                Rows.Add(rowspGetJobDetailsRow);
                return rowspGetJobDetailsRow;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRow FindByid(int id)
            {
                return (spGetJobDetailsRow)Rows.Find(new object[] { id });
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override DataTable Clone()
            {
                spGetJobDetailsDataTable cln = (spGetJobDetailsDataTable)base.Clone();
                cln.InitVars();
                return cln;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new spGetJobDetailsDataTable();
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars()
            {
                columnid=Columns["id"];
                columnJobID=Columns["JobID"];
                columnResourceID=Columns["ResourceID"];
                columnResourceName=Columns["ResourceName"];
                columnActivityCode=Columns["ActivityCode"];
                columnResUsage=Columns["ResUsage"];
                columnUM=Columns["UM"];
                columnBudgetQty=Columns["BudgetQty"];
                columnBudgetCostID=Columns["BudgetCostID"];
                columnBudgetCost=Columns["BudgetCost"];
                columnExtdCost=Columns["ExtdCost"];
                columnVendorID=Columns["VendorID"];
                columnPONumber=Columns["PONumber"];
                columnPurchQty=Columns["PurchQty"];
                columnPurchCostID=Columns["PurchCostID"];
                columnPurchCost=Columns["PurchCost"];
                columnCOId=Columns["COId"];
                columnReviewLevel=Columns["ReviewLevel"];
                columnReviewedDate=Columns["ReviewedDate"];
                columnReviewedBy=Columns["ReviewedBy"];
                columnApproved=Columns["Approved"];
                columnCancelledDate=Columns["CancelledDate"];
                columnCreatedDate=Columns["CreatedDate"];
                columnCreatedBy=Columns["CreatedBy"];
                columnUpdatedDate=Columns["UpdatedDate"];
                columnUpdatedBy=Columns["UpdatedBy"];
                columnBudgetExtdCost=Columns["BudgetExtdCost"];
                columnBudgetTax=Columns["BudgetTax"];
                columnPurchExtdCost=Columns["PurchExtdCost"];
                columnPurchTax=Columns["PurchTax"];
                columnActivity=Columns["Activity"];
                columnSource=Columns["Source"];
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass()
            {
                columnid=new DataColumn("id", typeof(int), null, MappingType.Element);
                Columns.Add(columnid);
                columnJobID=new DataColumn("JobID", typeof(string), null, MappingType.Element);
                Columns.Add(columnJobID);
                columnResourceID=new DataColumn("ResourceID", typeof(string), null, MappingType.Element);
                Columns.Add(columnResourceID);
                columnResourceName=new DataColumn("ResourceName", typeof(string), null, MappingType.Element);
                Columns.Add(columnResourceName);
                columnActivityCode=new DataColumn("ActivityCode", typeof(int), null, MappingType.Element);
                Columns.Add(columnActivityCode);
                columnResUsage=new DataColumn("ResUsage", typeof(string), null, MappingType.Element);
                Columns.Add(columnResUsage);
                columnUM=new DataColumn("UM", typeof(string), null, MappingType.Element);
                Columns.Add(columnUM);
                columnBudgetQty=new DataColumn("BudgetQty", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnBudgetQty);
                columnBudgetCostID=new DataColumn("BudgetCostID", typeof(int), null, MappingType.Element);
                Columns.Add(columnBudgetCostID);
                columnBudgetCost=new DataColumn("BudgetCost", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnBudgetCost);
                columnExtdCost=new DataColumn("ExtdCost", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnExtdCost);
                columnVendorID=new DataColumn("VendorID", typeof(int), null, MappingType.Element);
                Columns.Add(columnVendorID);
                columnPONumber=new DataColumn("PONumber", typeof(int), null, MappingType.Element);
                Columns.Add(columnPONumber);
                columnPurchQty=new DataColumn("PurchQty", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnPurchQty);
                columnPurchCostID=new DataColumn("PurchCostID", typeof(int), null, MappingType.Element);
                Columns.Add(columnPurchCostID);
                columnPurchCost=new DataColumn("PurchCost", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnPurchCost);
                columnCOId=new DataColumn("COId", typeof(int), null, MappingType.Element);
                Columns.Add(columnCOId);
                columnReviewLevel=new DataColumn("ReviewLevel", typeof(int), null, MappingType.Element);
                Columns.Add(columnReviewLevel);
                columnReviewedDate=new DataColumn("ReviewedDate", typeof(DateTime), null, MappingType.Element);
                Columns.Add(columnReviewedDate);
                columnReviewedBy=new DataColumn("ReviewedBy", typeof(string), null, MappingType.Element);
                Columns.Add(columnReviewedBy);
                columnApproved=new DataColumn("Approved", typeof(int), null, MappingType.Element);
                Columns.Add(columnApproved);
                columnCancelledDate=new DataColumn("CancelledDate", typeof(DateTime), null, MappingType.Element);
                Columns.Add(columnCancelledDate);
                columnCreatedDate=new DataColumn("CreatedDate", typeof(DateTime), null, MappingType.Element);
                Columns.Add(columnCreatedDate);
                columnCreatedBy=new DataColumn("CreatedBy", typeof(string), null, MappingType.Element);
                Columns.Add(columnCreatedBy);
                columnUpdatedDate=new DataColumn("UpdatedDate", typeof(DateTime), null, MappingType.Element);
                Columns.Add(columnUpdatedDate);
                columnUpdatedBy=new DataColumn("UpdatedBy", typeof(string), null, MappingType.Element);
                Columns.Add(columnUpdatedBy);
                columnBudgetExtdCost=new DataColumn("BudgetExtdCost", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnBudgetExtdCost);
                columnBudgetTax=new DataColumn("BudgetTax", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnBudgetTax);
                columnPurchExtdCost=new DataColumn("PurchExtdCost", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnPurchExtdCost);
                columnPurchTax=new DataColumn("PurchTax", typeof(decimal), null, MappingType.Element);
                Columns.Add(columnPurchTax);
                columnActivity=new DataColumn("Activity", typeof(string), null, MappingType.Element);
                Columns.Add(columnActivity);
                columnSource=new DataColumn("Source", typeof(string), null, MappingType.Element);
                Columns.Add(columnSource);
                Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] { columnid }, true));
                columnid.AutoIncrement=true;
                columnid.AllowDBNull=false;
                columnid.ReadOnly=true;
                columnid.Unique=true;
                columnJobID.MaxLength=20;
                columnResourceID.MaxLength=20;
                columnResourceName.MaxLength=50;
                columnResUsage.MaxLength=15;
                columnUM.MaxLength=10;
                columnReviewedBy.MaxLength=10;
                columnCreatedBy.MaxLength=10;
                columnUpdatedBy.MaxLength=10;
                columnActivity.MaxLength=50;
                columnSource.MaxLength=30;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRow NewspGetJobDetailsRow()
            {
                return (spGetJobDetailsRow)NewRow();
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new spGetJobDetailsRow(builder);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(spGetJobDetailsRow);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (spGetJobDetailsRowChanged is not null)
                {
                    spGetJobDetailsRowChanged?.Invoke(this, new spGetJobDetailsRowChangeEvent((spGetJobDetailsRow)e.Row, e.Action));
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (spGetJobDetailsRowChanging is not null)
                {
                    spGetJobDetailsRowChanging?.Invoke(this, new spGetJobDetailsRowChangeEvent((spGetJobDetailsRow)e.Row, e.Action));
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (spGetJobDetailsRowDeleted is not null)
                {
                    spGetJobDetailsRowDeleted?.Invoke(this, new spGetJobDetailsRowChangeEvent((spGetJobDetailsRow)e.Row, e.Action));
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (spGetJobDetailsRowDeleting is not null)
                {
                    spGetJobDetailsRowDeleting?.Invoke(this, new spGetJobDetailsRowChangeEvent((spGetJobDetailsRow)e.Row, e.Action));
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovespGetJobDetailsRow(spGetJobDetailsRow row)
            {
                Rows.Remove(row);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs)
            {
                var type = new System.Xml.Schema.XmlSchemaComplexType();
                var sequence = new System.Xml.Schema.XmlSchemaSequence();
                var ds = new HCHDataQAJobDetails();
                var any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace="http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs=new decimal(0);
                any1.MaxOccurs=decimal.MaxValue;
                any1.ProcessContents=System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                var any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace="urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs=new decimal(1);
                any2.ProcessContents=System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                var attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name="namespace";
                attribute1.FixedValue=ds.Namespace;
                type.Attributes.Add(attribute1);
                var attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name="tableTypeName";
                attribute2.FixedValue="spGetJobDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle=sequence;
                var dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    var s1 = new System.IO.MemoryStream();
                    var s2 = new System.IO.MemoryStream();
                    try
                    {
                        System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        var schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
                        while (schemas.MoveNext())
                        {
                            schema=(System.Xml.Schema.XmlSchema)schemas.Current;
                            s2.SetLength(0L);
                            schema.Write(s2);
                            if (s1.Length==s2.Length)
                            {
                                s1.Position=0L;
                                s2.Position=0L;

                                while (s1.Position!=s1.Length&&s1.ReadByte()==s2.ReadByte())
                                {


                                }
                                if (s1.Position==s1.Length)
                                {
                                    return type;
                                }
                            }

                        }
                    }
                    finally
                    {
                        if (s1 is not null)
                        {
                            s1.Close();
                        }
                        if (s2 is not null)
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
    /// Represents strongly named DataRow class.
    /// </summary>
        public partial class spGetJobDetailsRow : DataRow
        {

            private spGetJobDetailsDataTable tablespGetJobDetails;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spGetJobDetailsRow(DataRowBuilder rb) : base(rb)
            {
                tablespGetJobDetails=(spGetJobDetailsDataTable)Table;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int id
            {
                get
                {
                    return (int)(this[tablespGetJobDetails.idColumn]);
                }
                set
                {
                    this[tablespGetJobDetails.idColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string JobID
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.JobIDColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'JobID' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.JobIDColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResourceID
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.ResourceIDColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ResourceID' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ResourceIDColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResourceName
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.ResourceNameColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ResourceName' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ResourceNameColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ActivityCode
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.ActivityCodeColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ActivityCode' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ActivityCodeColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResUsage
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.ResUsageColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ResUsage' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ResUsageColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UM
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.UMColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'UM' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.UMColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BudgetQty
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.BudgetQtyColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'BudgetQty' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.BudgetQtyColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int BudgetCostID
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.BudgetCostIDColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'BudgetCostID' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.BudgetCostIDColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BudgetCost
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.BudgetCostColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'BudgetCost' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.BudgetCostColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ExtdCost
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.ExtdCostColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ExtdCost' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ExtdCostColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int VendorID
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.VendorIDColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'VendorID' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.VendorIDColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PONumber
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.PONumberColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PONumber' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PONumberColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PurchQty
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.PurchQtyColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PurchQty' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PurchQtyColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PurchCostID
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.PurchCostIDColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PurchCostID' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PurchCostIDColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PurchCost
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.PurchCostColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PurchCost' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PurchCostColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int COId
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.COIdColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'COId' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.COIdColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ReviewLevel
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.ReviewLevelColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ReviewLevel' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ReviewLevelColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DateTime ReviewedDate
            {
                get
                {
                    try
                    {
                        return Conversions.ToDate(this[tablespGetJobDetails.ReviewedDateColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ReviewedDate' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ReviewedDateColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ReviewedBy
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.ReviewedByColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'ReviewedBy' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ReviewedByColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Approved
            {
                get
                {
                    try
                    {
                        return (int)(this[tablespGetJobDetails.ApprovedColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'Approved' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ApprovedColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DateTime CancelledDate
            {
                get
                {
                    try
                    {
                        return Conversions.ToDate(this[tablespGetJobDetails.CancelledDateColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'CancelledDate' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.CancelledDateColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DateTime CreatedDate
            {
                get
                {
                    try
                    {
                        return Conversions.ToDate(this[tablespGetJobDetails.CreatedDateColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'CreatedDate' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.CreatedDateColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatedBy
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.CreatedByColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'CreatedBy' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.CreatedByColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DateTime UpdatedDate
            {
                get
                {
                    try
                    {
                        return Conversions.ToDate(this[tablespGetJobDetails.UpdatedDateColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'UpdatedDate' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.UpdatedDateColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UpdatedBy
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.UpdatedByColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'UpdatedBy' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.UpdatedByColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BudgetExtdCost
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.BudgetExtdCostColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'BudgetExtdCost' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.BudgetExtdCostColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BudgetTax
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.BudgetTaxColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'BudgetTax' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.BudgetTaxColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PurchExtdCost
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.PurchExtdCostColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PurchExtdCost' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PurchExtdCostColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PurchTax
            {
                get
                {
                    try
                    {
                        return Conversions.ToDecimal(this[tablespGetJobDetails.PurchTaxColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'PurchTax' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.PurchTaxColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Activity
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.ActivityColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'Activity' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.ActivityColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Source
            {
                get
                {
                    try
                    {
                        return Conversions.ToString(this[tablespGetJobDetails.SourceColumn]);
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("The value for column 'Source' in table 'spGetJobDetails' is DBNull.", e);
                    }
                }
                set
                {
                    this[tablespGetJobDetails.SourceColumn]=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJobIDNull()
            {
                return IsNull(tablespGetJobDetails.JobIDColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJobIDNull()
            {
                this[tablespGetJobDetails.JobIDColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResourceIDNull()
            {
                return IsNull(tablespGetJobDetails.ResourceIDColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResourceIDNull()
            {
                this[tablespGetJobDetails.ResourceIDColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResourceNameNull()
            {
                return IsNull(tablespGetJobDetails.ResourceNameColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResourceNameNull()
            {
                this[tablespGetJobDetails.ResourceNameColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActivityCodeNull()
            {
                return IsNull(tablespGetJobDetails.ActivityCodeColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActivityCodeNull()
            {
                this[tablespGetJobDetails.ActivityCodeColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResUsageNull()
            {
                return IsNull(tablespGetJobDetails.ResUsageColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResUsageNull()
            {
                this[tablespGetJobDetails.ResUsageColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUMNull()
            {
                return IsNull(tablespGetJobDetails.UMColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUMNull()
            {
                this[tablespGetJobDetails.UMColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBudgetQtyNull()
            {
                return IsNull(tablespGetJobDetails.BudgetQtyColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBudgetQtyNull()
            {
                this[tablespGetJobDetails.BudgetQtyColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBudgetCostIDNull()
            {
                return IsNull(tablespGetJobDetails.BudgetCostIDColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBudgetCostIDNull()
            {
                this[tablespGetJobDetails.BudgetCostIDColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBudgetCostNull()
            {
                return IsNull(tablespGetJobDetails.BudgetCostColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBudgetCostNull()
            {
                this[tablespGetJobDetails.BudgetCostColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsExtdCostNull()
            {
                return IsNull(tablespGetJobDetails.ExtdCostColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetExtdCostNull()
            {
                this[tablespGetJobDetails.ExtdCostColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVendorIDNull()
            {
                return IsNull(tablespGetJobDetails.VendorIDColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVendorIDNull()
            {
                this[tablespGetJobDetails.VendorIDColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPONumberNull()
            {
                return IsNull(tablespGetJobDetails.PONumberColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPONumberNull()
            {
                this[tablespGetJobDetails.PONumberColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurchQtyNull()
            {
                return IsNull(tablespGetJobDetails.PurchQtyColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurchQtyNull()
            {
                this[tablespGetJobDetails.PurchQtyColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurchCostIDNull()
            {
                return IsNull(tablespGetJobDetails.PurchCostIDColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurchCostIDNull()
            {
                this[tablespGetJobDetails.PurchCostIDColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurchCostNull()
            {
                return IsNull(tablespGetJobDetails.PurchCostColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurchCostNull()
            {
                this[tablespGetJobDetails.PurchCostColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOIdNull()
            {
                return IsNull(tablespGetJobDetails.COIdColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOIdNull()
            {
                this[tablespGetJobDetails.COIdColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReviewLevelNull()
            {
                return IsNull(tablespGetJobDetails.ReviewLevelColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReviewLevelNull()
            {
                this[tablespGetJobDetails.ReviewLevelColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReviewedDateNull()
            {
                return IsNull(tablespGetJobDetails.ReviewedDateColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReviewedDateNull()
            {
                this[tablespGetJobDetails.ReviewedDateColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReviewedByNull()
            {
                return IsNull(tablespGetJobDetails.ReviewedByColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReviewedByNull()
            {
                this[tablespGetJobDetails.ReviewedByColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApprovedNull()
            {
                return IsNull(tablespGetJobDetails.ApprovedColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApprovedNull()
            {
                this[tablespGetJobDetails.ApprovedColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCancelledDateNull()
            {
                return IsNull(tablespGetJobDetails.CancelledDateColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCancelledDateNull()
            {
                this[tablespGetJobDetails.CancelledDateColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedDateNull()
            {
                return IsNull(tablespGetJobDetails.CreatedDateColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedDateNull()
            {
                this[tablespGetJobDetails.CreatedDateColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatedByNull()
            {
                return IsNull(tablespGetJobDetails.CreatedByColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatedByNull()
            {
                this[tablespGetJobDetails.CreatedByColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUpdatedDateNull()
            {
                return IsNull(tablespGetJobDetails.UpdatedDateColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUpdatedDateNull()
            {
                this[tablespGetJobDetails.UpdatedDateColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUpdatedByNull()
            {
                return IsNull(tablespGetJobDetails.UpdatedByColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUpdatedByNull()
            {
                this[tablespGetJobDetails.UpdatedByColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBudgetExtdCostNull()
            {
                return IsNull(tablespGetJobDetails.BudgetExtdCostColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBudgetExtdCostNull()
            {
                this[tablespGetJobDetails.BudgetExtdCostColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBudgetTaxNull()
            {
                return IsNull(tablespGetJobDetails.BudgetTaxColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBudgetTaxNull()
            {
                this[tablespGetJobDetails.BudgetTaxColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurchExtdCostNull()
            {
                return IsNull(tablespGetJobDetails.PurchExtdCostColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurchExtdCostNull()
            {
                this[tablespGetJobDetails.PurchExtdCostColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurchTaxNull()
            {
                return IsNull(tablespGetJobDetails.PurchTaxColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurchTaxNull()
            {
                this[tablespGetJobDetails.PurchTaxColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActivityNull()
            {
                return IsNull(tablespGetJobDetails.ActivityColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActivityNull()
            {
                this[tablespGetJobDetails.ActivityColumn]=Convert.DBNull;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSourceNull()
            {
                return IsNull(tablespGetJobDetails.SourceColumn);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSourceNull()
            {
                this[tablespGetJobDetails.SourceColumn]=Convert.DBNull;
            }
        }

        /// <summary>
    /// Row event argument class
    /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class spGetJobDetailsRowChangeEvent : EventArgs
        {

            private spGetJobDetailsRow eventRow;

            private DataRowAction eventAction;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRowChangeEvent(spGetJobDetailsRow row, DataRowAction action) : base()
            {
                eventRow=row;
                eventAction=action;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsRow Row
            {
                get
                {
                    return eventRow;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return eventAction;
                }
            }
        }
    }

    namespace HCHDataQAJobDetailsTableAdapters
    {

        /// <summary>
    /// Represents the connection and commands used to retrieve and save data.
    /// </summary>
        [System.ComponentModel.DesignerCategory("code")]
        [System.ComponentModel.ToolboxItem(true)]
        [System.ComponentModel.DataObject(true)]
        [System.ComponentModel.Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"+", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

        [System.ComponentModel.Design.HelpKeyword("vs.data.TableAdapter")]
        public partial class spGetJobDetailsTableAdapter : System.ComponentModel.Component
        {

            private System.Data.SqlClient.SqlDataAdapter __adapter;

            private System.Data.SqlClient.SqlDataAdapter _adapter
            {
                [MethodImpl(MethodImplOptions.Synchronized)]
                get
                {
                    return __adapter;
                }

                [MethodImpl(MethodImplOptions.Synchronized)]
                set
                {
                    __adapter=value;
                }
            }

            private System.Data.SqlClient.SqlConnection _connection;

            private System.Data.SqlClient.SqlTransaction _transaction;

            private System.Data.SqlClient.SqlCommand[] _commandCollection;

            private bool _clearBeforeFill;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spGetJobDetailsTableAdapter() : base()
            {
                ClearBeforeFill=true;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected internal System.Data.SqlClient.SqlDataAdapter Adapter
            {
                get
                {
                    if (_adapter is null)
                    {
                        InitAdapter();
                    }
                    return _adapter;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal System.Data.SqlClient.SqlConnection Connection
            {
                get
                {
                    if (_connection is null)
                    {
                        InitConnection();
                    }
                    return _connection;
                }
                set
                {
                    _connection=value;
                    if (Adapter.InsertCommand is not null)
                    {
                        Adapter.InsertCommand.Connection=value;
                    }
                    if (Adapter.DeleteCommand is not null)
                    {
                        Adapter.DeleteCommand.Connection=value;
                    }
                    if (Adapter.UpdateCommand is not null)
                    {
                        Adapter.UpdateCommand.Connection=value;
                    }
                    int i = 0;
                    while (i<CommandCollection.Length)
                    {
                        if (CommandCollection[i] is not null)
                        {
                            CommandCollection[i].Connection=value;
                        }
                        i=i+1;
                    }
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal System.Data.SqlClient.SqlTransaction Transaction
            {
                get
                {
                    return _transaction;
                }
                set
                {
                    _transaction=value;
                    int i = 0;
                    while (i<CommandCollection.Length)
                    {
                        CommandCollection[i].Transaction=_transaction;
                        i=i+1;
                    }
                    if (Adapter is not null&&Adapter.DeleteCommand is not null)
                    {
                        Adapter.DeleteCommand.Transaction=_transaction;
                    }
                    if (Adapter is not null&&Adapter.InsertCommand is not null)
                    {
                        Adapter.InsertCommand.Transaction=_transaction;
                    }
                    if (Adapter is not null&&Adapter.UpdateCommand is not null)
                    {
                        Adapter.UpdateCommand.Transaction=_transaction;
                    }
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected System.Data.SqlClient.SqlCommand[] CommandCollection
            {
                get
                {
                    if (_commandCollection is null)
                    {
                        InitCommandCollection();
                    }
                    return _commandCollection;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ClearBeforeFill
            {
                get
                {
                    return _clearBeforeFill;
                }
                set
                {
                    _clearBeforeFill=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitAdapter()
            {
                _adapter=new System.Data.SqlClient.SqlDataAdapter();
                var tableMapping = new System.Data.Common.DataTableMapping();
                tableMapping.SourceTable="Table";
                tableMapping.DataSetTable="spGetJobDetails";
                tableMapping.ColumnMappings.Add("id", "id");
                tableMapping.ColumnMappings.Add("JobID", "JobID");
                tableMapping.ColumnMappings.Add("ResourceID", "ResourceID");
                tableMapping.ColumnMappings.Add("ResourceName", "ResourceName");
                tableMapping.ColumnMappings.Add("ActivityCode", "ActivityCode");
                tableMapping.ColumnMappings.Add("ResUsage", "ResUsage");
                tableMapping.ColumnMappings.Add("UM", "UM");
                tableMapping.ColumnMappings.Add("BudgetQty", "BudgetQty");
                tableMapping.ColumnMappings.Add("BudgetCostID", "BudgetCostID");
                tableMapping.ColumnMappings.Add("BudgetCost", "BudgetCost");
                tableMapping.ColumnMappings.Add("ExtdCost", "ExtdCost");
                tableMapping.ColumnMappings.Add("VendorID", "VendorID");
                tableMapping.ColumnMappings.Add("PONumber", "PONumber");
                tableMapping.ColumnMappings.Add("PurchQty", "PurchQty");
                tableMapping.ColumnMappings.Add("PurchCostID", "PurchCostID");
                tableMapping.ColumnMappings.Add("PurchCost", "PurchCost");
                tableMapping.ColumnMappings.Add("COId", "COId");
                tableMapping.ColumnMappings.Add("ReviewLevel", "ReviewLevel");
                tableMapping.ColumnMappings.Add("ReviewedDate", "ReviewedDate");
                tableMapping.ColumnMappings.Add("ReviewedBy", "ReviewedBy");
                tableMapping.ColumnMappings.Add("Approved", "Approved");
                tableMapping.ColumnMappings.Add("CancelledDate", "CancelledDate");
                tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
                tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
                tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
                tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
                tableMapping.ColumnMappings.Add("BudgetExtdCost", "BudgetExtdCost");
                tableMapping.ColumnMappings.Add("BudgetTax", "BudgetTax");
                tableMapping.ColumnMappings.Add("PurchExtdCost", "PurchExtdCost");
                tableMapping.ColumnMappings.Add("PurchTax", "PurchTax");
                tableMapping.ColumnMappings.Add("Activity", "Activity");
                tableMapping.ColumnMappings.Add("Source", "Source");
                _adapter.TableMappings.Add(tableMapping);
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitConnection()
            {
                _connection=new System.Data.SqlClient.SqlConnection();
                _connection.ConnectionString=My.MySettings.Default.HCHDataQAConnectionString;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitCommandCollection()
            {
                _commandCollection=new System.Data.SqlClient.SqlCommand[1];
                _commandCollection[0]=new System.Data.SqlClient.SqlCommand();
                _commandCollection[0].Connection=Connection;
                _commandCollection[0].CommandText="dbo.spGetJobDetails";
                _commandCollection[0].CommandType=CommandType.StoredProcedure;
                _commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", SqlDbType.Int, 4, ParameterDirection.ReturnValue, 10, 0, null, DataRowVersion.Current, false, null, "", "", ""));
                _commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@JobID", SqlDbType.VarChar, 20, ParameterDirection.Input, 0, 0, null, DataRowVersion.Current, false, null, "", "", ""));
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ComponentModel.Design.HelpKeyword("vs.data.TableAdapter")]
            [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Fill, true)]
            public virtual int Fill(HCHDataQAJobDetails.spGetJobDetailsDataTable dataTable, string JobID)
            {
                Adapter.SelectCommand=CommandCollection[0];
                if (JobID is null)
                {
                    Adapter.SelectCommand.Parameters[1].Value=DBNull.Value;
                }
                else
                {
                    Adapter.SelectCommand.Parameters[1].Value=JobID;
                }
                if (ClearBeforeFill==true)
                {
                    dataTable.Clear();
                }
                int returnValue = Adapter.Fill(dataTable);
                return returnValue;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ComponentModel.Design.HelpKeyword("vs.data.TableAdapter")]
            [System.ComponentModel.DataObjectMethod(System.ComponentModel.DataObjectMethodType.Select, true)]
            public virtual HCHDataQAJobDetails.spGetJobDetailsDataTable GetData(string JobID)
            {
                Adapter.SelectCommand=CommandCollection[0];
                if (JobID is null)
                {
                    Adapter.SelectCommand.Parameters[1].Value=DBNull.Value;
                }
                else
                {
                    Adapter.SelectCommand.Parameters[1].Value=JobID;
                }
                var dataTable = new HCHDataQAJobDetails.spGetJobDetailsDataTable();
                Adapter.Fill(dataTable);
                return dataTable;
            }
        }

        /// <summary>
    /// TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    /// </summary>
        [System.ComponentModel.DesignerCategory("code")]
        [System.ComponentModel.ToolboxItem(true)]
        [System.ComponentModel.Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"+"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

        [System.ComponentModel.Design.HelpKeyword("vs.data.TableAdapterManager")]
        public partial class TableAdapterManager : System.ComponentModel.Component
        {

            private UpdateOrderOption _updateOrder;

            private bool _backupDataSetBeforeUpdate;

            private IDbConnection _connection;

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UpdateOrderOption UpdateOrder
            {
                get
                {
                    return _updateOrder;
                }
                set
                {
                    _updateOrder=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool BackupDataSetBeforeUpdate
            {
                get
                {
                    return _backupDataSetBeforeUpdate;
                }
                set
                {
                    _backupDataSetBeforeUpdate=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ComponentModel.Browsable(false)]
            public IDbConnection Connection
            {
                get
                {
                    if (_connection is not null)
                    {
                        return _connection;
                    }
                    return null;
                }
                set
                {
                    _connection=value;
                }
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ComponentModel.Browsable(false)]
            public int TableAdapterInstanceCount
            {
                get
                {
                    int count = 0;
                    return count;
                }
            }

            /// <summary>
        /// Update rows in top-down order.
        /// </summary>
            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private int UpdateUpdatedRows(HCHDataQAJobDetails dataSet, List<DataRow> allChangedRows, List<DataRow> allAddedRows)
            {
                int result = 0;
                return result;
            }

            /// <summary>
        /// Insert rows in top-down order.
        /// </summary>
            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private int UpdateInsertedRows(HCHDataQAJobDetails dataSet, List<DataRow> allAddedRows)
            {
                int result = 0;
                return result;
            }

            /// <summary>
        /// Delete rows in bottom-up order.
        /// </summary>
            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private int UpdateDeletedRows(HCHDataQAJobDetails dataSet, List<DataRow> allChangedRows)
            {
                int result = 0;
                return result;
            }

            /// <summary>
        /// Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        /// </summary>
            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private DataRow[] GetRealUpdatedRows(DataRow[] updatedRows, List<DataRow> allAddedRows)
            {
                if (updatedRows is null||updatedRows.Length<1)
                {
                    return updatedRows;
                }
                if (allAddedRows is null||allAddedRows.Count<1)
                {
                    return updatedRows;
                }
                var realUpdatedRows = new List<DataRow>();
                int i = 0;
                while (i<updatedRows.Length)
                {
                    var row = updatedRows[i];
                    if (allAddedRows.Contains(row)==false)
                    {
                        realUpdatedRows.Add(row);
                    }
                    i=i+1;
                }
                return realUpdatedRows.ToArray();
            }

            /// <summary>
        /// Update all changes to the dataset.
        /// </summary>
            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public virtual int UpdateAll(HCHDataQAJobDetails dataSet)
            {
                if (dataSet is null)
                {
                    throw new ArgumentNullException("dataSet");
                }
                if (dataSet.HasChanges()==false)
                {
                    return 0;
                }
                var workConnection = Connection;
                if (workConnection is null)
                {
                    throw new ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"+"ger TableAdapter property to a valid TableAdapter instance.");
                }
                bool workConnOpened = false;
                if ((workConnection.State&ConnectionState.Broken)==ConnectionState.Broken)
                {
                    workConnection.Close();
                }
                if (workConnection.State==ConnectionState.Closed)
                {
                    workConnection.Open();
                    workConnOpened=true;
                }
                var workTransaction = workConnection.BeginTransaction();
                if (workTransaction is null)
                {
                    throw new ApplicationException("The transaction cannot begin. The current data connection does not support transa"+"ctions or the current state is not allowing the transaction to begin.");
                }
                var allChangedRows = new List<DataRow>();
                var allAddedRows = new List<DataRow>();
                var adaptersWithAcceptChangesDuringUpdate = new List<System.Data.Common.DataAdapter>();
                var revertConnections = new Dictionary<object, IDbConnection>();
                int result = 0;
                DataSet backupDataSet = null;
                if (BackupDataSetBeforeUpdate)
                {
                    backupDataSet=new DataSet();
                    backupDataSet.Merge(dataSet);
                }
                try
                {
                    // ---- Prepare for update -----------
                    // 
                    // 
                    // ---- Perform updates -----------
                    // 
                    if (UpdateOrder==UpdateOrderOption.UpdateInsertDelete)
                    {
                        result=result+UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
                        result=result+UpdateInsertedRows(dataSet, allAddedRows);
                    }
                    else
                    {
                        result=result+UpdateInsertedRows(dataSet, allAddedRows);
                        result=result+UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
                    }
                    result=result+UpdateDeletedRows(dataSet, allChangedRows);
                    // 
                    // ---- Commit updates -----------
                    // 
                    workTransaction.Commit();
                    if (0<allAddedRows.Count)
                    {
                        var rows = new DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        int i = 0;
                        while (i<rows.Length)
                        {
                            var row = rows[i];
                            row.AcceptChanges();
                            i=i+1;
                        }
                    }
                    if (0<allChangedRows.Count)
                    {
                        var rows = new DataRow[allChangedRows.Count];
                        allChangedRows.CopyTo(rows);
                        int i = 0;
                        while (i<rows.Length)
                        {
                            var row = rows[i];
                            row.AcceptChanges();
                            i=i+1;
                        }
                    }
                }
                catch (Exception ex)
                {
                    workTransaction.Rollback();
                    // ---- Restore the dataset -----------
                    if (BackupDataSetBeforeUpdate)
                    {
                        Debug.Assert(backupDataSet is not null);
                        dataSet.Clear();
                        dataSet.Merge(backupDataSet);
                    }
                    else if (0<allAddedRows.Count)
                    {
                        var rows = new DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        int i = 0;
                        while (i<rows.Length)
                        {
                            var row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                            i=i+1;
                        }
                    }
                    throw ex;
                }
                finally
                {
                    if (workConnOpened)
                    {
                        workConnection.Close();
                    }
                    if (0<adaptersWithAcceptChangesDuringUpdate.Count)
                    {
                        var adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                        adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                        int i = 0;
                        while (i<adapters.Length)
                        {
                            var adapter = adapters[i];
                            adapter.AcceptChangesDuringUpdate=true;
                            i=i+1;
                        }
                    }
                }
                return result;
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected virtual void SortSelfReferenceRows(DataRow[] rows, DataRelation relation, bool childFirst)
            {
                Array.Sort(rows, new SelfReferenceComparer(relation, childFirst));
            }

            [DebuggerNonUserCode()]
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected virtual bool MatchTableAdapterConnection(IDbConnection inputConnection)
            {
                if (_connection is not null)
                {
                    return true;
                }
                if (Connection is null||inputConnection is null)
                {
                    return true;
                }
                if (string.Equals(Connection.ConnectionString, inputConnection.ConnectionString, StringComparison.Ordinal))
                {
                    return true;
                }
                return false;
            }

            /// <summary>
        /// Update Order Option
        /// </summary>
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public enum UpdateOrderOption
            {

                InsertUpdateDelete = 0,

                UpdateInsertDelete = 1
            }

            /// <summary>
        /// Used to sort self-referenced table's rows
        /// </summary>
            [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private class SelfReferenceComparer : object, IComparer<DataRow>
            {

                private DataRelation _relation;

                private int _childFirst;

                [DebuggerNonUserCode()]
                [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
                internal SelfReferenceComparer(DataRelation relation, bool childFirst) : base()
                {
                    _relation=relation;
                    if (childFirst)
                    {
                        _childFirst=-1;
                    }
                    else
                    {
                        _childFirst=1;
                    }
                }

                [DebuggerNonUserCode()]
                [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
                private DataRow GetRoot(DataRow row, ref int distance)
                {
                    Debug.Assert(row is not null);
                    var root = row;
                    distance=0;

                    IDictionary<DataRow, DataRow> traversedRows = new Dictionary<DataRow, DataRow>();
                    traversedRows[row]=row;

                    var parent = row.GetParentRow(_relation, DataRowVersion.Default);

                    while (parent is not null&&traversedRows.ContainsKey(parent)==false)
                    {
                        distance=distance+1;
                        root=parent;
                        traversedRows[parent]=parent;
                        parent=parent.GetParentRow(_relation, DataRowVersion.Default);

                    }

                    if (distance==0)
                    {
                        traversedRows.Clear();
                        traversedRows[row]=row;
                        parent=row.GetParentRow(_relation, DataRowVersion.Original);

                        while (parent is not null&&traversedRows.ContainsKey(parent)==false)
                        {
                            distance=distance+1;
                            root=parent;
                            traversedRows[parent]=parent;
                            parent=parent.GetParentRow(_relation, DataRowVersion.Original);

                        }
                    }

                    return root;
                }

                [DebuggerNonUserCode()]
                [System.CodeDom.Compiler.GeneratedCode("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
                public int Compare(DataRow row1, DataRow row2)
                {
                    if (ReferenceEquals(row1, row2))
                    {
                        return 0;
                    }
                    if (row1 is null)
                    {
                        return -1;
                    }
                    if (row2 is null)
                    {
                        return 1;
                    }

                    int distance1 = 0;
                    var root1 = GetRoot(row1, ref distance1);

                    int distance2 = 0;
                    var root2 = GetRoot(row2, ref distance2);

                    if (ReferenceEquals(root1, root2))
                    {
                        return _childFirst*distance1.CompareTo(distance2);
                    }
                    else
                    {
                        Debug.Assert(root1.Table is not null&&root2.Table is not null);
                        if (root1.Table.Rows.IndexOf(root1)<root2.Table.Rows.IndexOf(root2))
                        {
                            return -1;
                        }
                        else
                        {
                            return 1;
                        }
                    }
                }
            }
        }
    }
}